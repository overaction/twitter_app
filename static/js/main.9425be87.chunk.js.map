{"version":3,"sources":["myBase.js","components/Tweet.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","reader","FileReader","Tweet","tweetObj","userObj","isOwner","profile","useState","editing","setEditing","text","newTweet","setNewTweet","fileUrl","setFileUrl","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","toggleEditing","prev","onSubmit","e","preventDefault","downloadUrl","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","update","onFileChange","files","target","theFile","readAsDataURL","onload","result","currentTarget","value","className","type","placeholder","required","autoFocus","onChange","htmlFor","accept","src","alt","onClick","open","icon","faTrash","faPencilAlt","Profile","refreshUser","profileTweets","setProfileTweets","seeTweet","setSeeTweet","history","useHistory","displayName","newDisplayName","setNewDisplayName","useEffect","unsubscribe","collection","where","orderBy","onSnapshot","snap","tweetArray","docs","map","data","console","log","updateProfile","style","marginTop","signOut","push","length","tweet","creatorId","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","TweetFactory","setTweet","file","setFile","createdAt","Date","now","add","maxLength","faPlus","opacity","faTimes","Home","tweets","setTweets","snapshot","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9425be87.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nlet reader = new FileReader();\r\n\r\nconst Tweet = ({ tweetObj, userObj, isOwner, profile }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const [fileUrl, setFileUrl] = useState(tweetObj.fileUrl);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this tweet?');\r\n    if (ok) {\r\n      // tweet 삭제\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      // file이 있다면 file 삭제\r\n      if (fileUrl) {\r\n        await storageService.refFromURL(fileUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let downloadUrl = '';\r\n    if (fileUrl !== '') {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(fileUrl, 'data_url');\r\n      downloadUrl = await response.ref.getDownloadURL();\r\n      setFileUrl(downloadUrl);\r\n      await dbService.doc(`tweets/${tweetObj.id}`).update({ fileUrl: downloadUrl });\r\n    }\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onTweetChange = (e) => {\r\n    setNewTweet(e.target.value);\r\n  };\r\n  const onImgClick = (e) => {\r\n    window.open(e.target.src, '_blank');\r\n  };\r\n  const onFileChange = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    if (theFile) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n    reader.onload = (e) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = e;\r\n      setFileUrl(result);\r\n    };\r\n    e.target.value = '';\r\n  };\r\n  return (\r\n    <div className=\"tweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your tweet\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              onChange={onTweetChange}\r\n              className=\"formInput\"\r\n            />\r\n            <div className=\"editFile\">\r\n              <label htmlFor=\"tweet__editFile\" className=\"editFile__label\">\r\n                {fileUrl ? <span>new photo</span> : <span>Add Photo</span>}\r\n              </label>\r\n              <input onChange={onFileChange} id=\"tweet__editFile\" type=\"file\" accept=\"image/*\" />\r\n              {fileUrl && (\r\n                <img className=\"tweetImg\" src={fileUrl} alt=\"img\" />\r\n              )}\r\n            </div>\r\n            <input type=\"submit\" value=\"Update tweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {fileUrl && (\r\n            <img\r\n              className=\"tweetImg\"\r\n              src={fileUrl}\r\n              alt=\"img\"\r\n              onClick={onImgClick}\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"tweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import Tweet from 'components/Tweet';\r\nimport { authService, dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [profileTweets, setProfileTweets] = useState([]);\r\n  const [seeTweet, setSeeTweet] = useState(false);\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n  useEffect(() => {\r\n    const data = dbService\r\n      .collection('tweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createdAt', 'desc');\r\n    const unsubscribe = data.onSnapshot((snap) => {\r\n      const tweetArray = snap.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setProfileTweets(tweetArray);\r\n      console.log(`profile snapshot`);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [userObj.uid]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n    }\r\n    refreshUser();\r\n  };\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n\r\n  const onViewClick = (e) => {\r\n    setSeeTweet((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"profileForm\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"formInput\"\r\n          autoFocus\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n        />\r\n        <input\r\n          style={{ marginTop: 10 }}\r\n          className=\"formBtn\"\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n      <span onClick={onViewClick} className=\"formBtn myTweets\">View My Tweets</span>\r\n      {profileTweets.length > 0 && seeTweet ? (\r\n        \r\n          <div className=\"profileTweets\">\r\n            {console.log(profileTweets)}\r\n            {profileTweets.map((tweet) => (\r\n              <Tweet\r\n                key={tweet.id}\r\n                userObj={userObj}\r\n                tweetObj={tweet}\r\n                isOwner={tweet.creatorId === userObj.uid}\r\n              />\r\n            ))}\r\n          </div>\r\n        \r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from 'myBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create account\r\n        await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Log in\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myBase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet reader = new FileReader();\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('');\r\n  const [file, setFile] = useState('');\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (tweet === '') return;\r\n    let fileUrl = '';\r\n    if (file !== '') {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, 'data_url');\r\n      fileUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const newTweet = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      fileUrl,\r\n    };\r\n    await dbService.collection('tweets').add(newTweet);\r\n    setTweet('');\r\n    setFile('');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    if (theFile) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n    reader.onload = (e) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = e;\r\n      setFile(result);\r\n    };\r\n    e.target.value = '';\r\n  };\r\n\r\n  const onClearFile = () => {\r\n    setFile('');\r\n  }\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {file && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img src={file} alt=\"img\"/>\r\n          <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import Tweet from 'components/Tweet';\r\nimport { dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TweetFactory from 'components/TweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    const tweetRef = dbService.collection(\"tweets\").orderBy(\"createdAt\",\"desc\");\r\n    const unsubscribe = tweetRef.onSnapshot((snapshot) => {\r\n      const tweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTweets(tweetArray);\r\n      console.log('snapshot');\r\n    });\r\n    return () => {\r\n      setTweets(false);\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            userObj={userObj}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <div className=\"route\">\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'myBase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => {\r\n            return user.updateProfile(args);\r\n          },\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n        setInit(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => {\r\n        return user.updateProfile(args);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {console.log('updated')}\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        'Initializing...'\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}