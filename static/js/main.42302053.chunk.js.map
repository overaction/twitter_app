{"version":3,"sources":["myBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyTweets","useCallback","a","collection","where","uid","orderBy","get","tweets","console","log","docs","map","doc","data","useEffect","onSubmit","e","preventDefault","updateProfile","className","autoFocus","onChange","target","value","type","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","id","delete","refFromURL","fileUrl","toggleEditing","update","attachmentUrl","src","alt","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","file","setFile","reader","FileReader","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","htmlFor","faPlus","accept","theFile","files","readAsDataURL","onload","result","currentTarget","opacity","backgroundImage","faTimes","Home","setTweets","onSnapshot","snapshot","tweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42302053.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from 'myBase';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n  const getMyTweets = useCallback(async () => {\r\n    const tweets = await dbService\r\n      .collection('tweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createdAt', 'desc')\r\n      .get();\r\n    console.log(tweets.docs.map((doc) => doc.data()));\r\n  },[userObj.uid]);\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  }, [getMyTweets]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n    }\r\n    refreshUser();\r\n  };\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"profileForm\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"formInput\"\r\n          autoFocus\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n        />\r\n        <input style={{marginTop: 10,}} className=\"formBtn\" type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from 'myBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create account\r\n        await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Log in\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myBase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this tweet?');\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.fileUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\r\n    setEditing(false);\r\n  };\r\n  const onTweetChange = (e) => {\r\n    setNewTweet(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"tweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your tweet\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              onChange={onTweetChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update tweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && (\r\n            <img src={tweetObj.attachmentUrl} alt=\"img\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"tweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('');\r\n  const [file, setFile] = useState('');\r\n  const reader = new FileReader();\r\n\r\n  const onSubmit = async (e) => {\r\n    if (tweet === '') return;\r\n\r\n    e.preventDefault();\r\n    let fileUrl = '';\r\n    if (file !== '') {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, 'data_url');\r\n      fileUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const newTweet = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      fileUrl,\r\n    };\r\n    await dbService.collection('tweets').add(newTweet);\r\n    setTweet('');\r\n    setFile('');\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setTweet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    console.log(theFile);\r\n    if (theFile) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n    reader.onload = (e) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = e;\r\n      setFile(result);\r\n    };\r\n  };\r\n  const onClearFile = () => setFile('');\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {file && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={file}\r\n            alt=\"img\"\r\n            style={{\r\n              backgroundImage: file,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import Tweet from 'components/Tweet';\r\nimport { dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TweetFactory from 'components/TweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection('tweets').onSnapshot((snapshot) => {\r\n      const tweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTweets(tweetArray);\r\n      console.log('snapshot');\r\n    });\r\n    return () => setTweets(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <div className=\"route\">\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'myBase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => {\r\n            return user.updateProfile(args);\r\n          },\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n        setInit(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => {\r\n        return user.updateProfile(args);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {console.log('updated')}\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        'Initializing...'\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}